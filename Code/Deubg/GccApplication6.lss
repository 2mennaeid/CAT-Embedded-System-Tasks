
GccApplication6.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000006ea  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  000006ea  0000077e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  0080006a  0080006a  00000788  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000788  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000007b8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000128  00000000  00000000  000007f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001ac8  00000000  00000000  0000091c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000982  00000000  00000000  000023e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e96  00000000  00000000  00002d66  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000230  00000000  00000000  00003bfc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005f4  00000000  00000000  00003e2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000e37  00000000  00000000  00004420  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  00005257  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__vector_1>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea ee       	ldi	r30, 0xEA	; 234
  68:	f6 e0       	ldi	r31, 0x06	; 6
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	aa e6       	ldi	r26, 0x6A	; 106
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ae 36       	cpi	r26, 0x6E	; 110
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 de 01 	call	0x3bc	; 0x3bc <main>
  8a:	0c 94 73 03 	jmp	0x6e6	; 0x6e6 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__vector_1>:
			}
		}
	 
}
ISR(INT0_vect)
{
  92:	1f 92       	push	r1
  94:	0f 92       	push	r0
  96:	0f b6       	in	r0, 0x3f	; 63
  98:	0f 92       	push	r0
  9a:	11 24       	eor	r1, r1
  9c:	2f 93       	push	r18
  9e:	3f 93       	push	r19
  a0:	4f 93       	push	r20
  a2:	5f 93       	push	r21
  a4:	6f 93       	push	r22
  a6:	7f 93       	push	r23
  a8:	8f 93       	push	r24
  aa:	9f 93       	push	r25
  ac:	af 93       	push	r26
  ae:	bf 93       	push	r27
  b0:	ef 93       	push	r30
  b2:	ff 93       	push	r31
	DIO_readpinvalue(PORT_A,1,&green);
  b4:	4b e6       	ldi	r20, 0x6B	; 107
  b6:	50 e0       	ldi	r21, 0x00	; 0
  b8:	61 e0       	ldi	r22, 0x01	; 1
  ba:	81 e4       	ldi	r24, 0x41	; 65
  bc:	0e 94 30 03 	call	0x660	; 0x660 <DIO_readpinvalue>
	DIO_readpinvalue(PORT_A,0,&yellaw);
  c0:	4d e6       	ldi	r20, 0x6D	; 109
  c2:	50 e0       	ldi	r21, 0x00	; 0
  c4:	60 e0       	ldi	r22, 0x00	; 0
  c6:	81 e4       	ldi	r24, 0x41	; 65
  c8:	0e 94 30 03 	call	0x660	; 0x660 <DIO_readpinvalue>
	DIO_readpinvalue(PORT_B,1,&red);
  cc:	4c e6       	ldi	r20, 0x6C	; 108
  ce:	50 e0       	ldi	r21, 0x00	; 0
  d0:	61 e0       	ldi	r22, 0x01	; 1
  d2:	82 e4       	ldi	r24, 0x42	; 66
  d4:	0e 94 30 03 	call	0x660	; 0x660 <DIO_readpinvalue>
	if(yellaw==HIGH)
  d8:	80 91 6d 00 	lds	r24, 0x006D	; 0x80006d <yellaw>
  dc:	81 30       	cpi	r24, 0x01	; 1
  de:	19 f4       	brne	.+6      	; 0xe6 <__vector_1+0x54>
	{
		
		//	_delay();
		state=1;
  e0:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__data_end>
  e4:	0c c0       	rjmp	.+24     	; 0xfe <__vector_1+0x6c>
	}
	else if(green==HIGH)
  e6:	80 91 6b 00 	lds	r24, 0x006B	; 0x80006b <green>
  ea:	81 30       	cpi	r24, 0x01	; 1
  ec:	41 f4       	brne	.+16     	; 0xfe <__vector_1+0x6c>
	{
		led_of(PORT_A,0,source);
  ee:	48 e0       	ldi	r20, 0x08	; 8
  f0:	60 e0       	ldi	r22, 0x00	; 0
  f2:	81 e4       	ldi	r24, 0x41	; 65
  f4:	0e 94 c8 01 	call	0x390	; 0x390 <led_of>
		state=2;
  f8:	82 e0       	ldi	r24, 0x02	; 2
  fa:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__data_end>
	
	}
  fe:	ff 91       	pop	r31
 100:	ef 91       	pop	r30
 102:	bf 91       	pop	r27
 104:	af 91       	pop	r26
 106:	9f 91       	pop	r25
 108:	8f 91       	pop	r24
 10a:	7f 91       	pop	r23
 10c:	6f 91       	pop	r22
 10e:	5f 91       	pop	r21
 110:	4f 91       	pop	r20
 112:	3f 91       	pop	r19
 114:	2f 91       	pop	r18
 116:	0f 90       	pop	r0
 118:	0f be       	out	0x3f, r0	; 63
 11a:	0f 90       	pop	r0
 11c:	1f 90       	pop	r1
 11e:	18 95       	reti

00000120 <Control_2Mltiplexed_7Seg_usingTwoPush>:
		}		
		
	}
}
void Control_2Mltiplexed_7Seg_usingTwoPush()
{
 120:	cf 93       	push	r28
 122:	df 93       	push	r29
 124:	cd b7       	in	r28, 0x3d	; 61
 126:	de b7       	in	r29, 0x3e	; 62
 128:	2b 97       	sbiw	r28, 0x0b	; 11
 12a:	0f b6       	in	r0, 0x3f	; 63
 12c:	f8 94       	cli
 12e:	de bf       	out	0x3e, r29	; 62
 130:	0f be       	out	0x3f, r0	; 63
 132:	cd bf       	out	0x3d, r28	; 61
	uint8_t NumDisplay []= {  0x3f, 0x06, 0x5B,
 134:	8a e0       	ldi	r24, 0x0A	; 10
 136:	e0 e6       	ldi	r30, 0x60	; 96
 138:	f0 e0       	ldi	r31, 0x00	; 0
 13a:	de 01       	movw	r26, r28
 13c:	11 96       	adiw	r26, 0x01	; 1
 13e:	01 90       	ld	r0, Z+
 140:	0d 92       	st	X+, r0
 142:	8a 95       	dec	r24
 144:	e1 f7       	brne	.-8      	; 0x13e <Control_2Mltiplexed_7Seg_usingTwoPush+0x1e>
	0x6F};
	uint8_t i=5;
	uint8_t j=0;
	uint8_t val;
	uint8_t num = 49;
	Button_eninit(PORT_C,PIN0,PULL_UP); //push 1
 146:	41 e0       	ldi	r20, 0x01	; 1
 148:	60 e0       	ldi	r22, 0x00	; 0
 14a:	83 e4       	ldi	r24, 0x43	; 67
 14c:	0e 94 a5 01 	call	0x34a	; 0x34a <Button_eninit>
	Button_eninit(PORT_C,PIN1,PULL_UP); // push2
 150:	41 e0       	ldi	r20, 0x01	; 1
 152:	61 e0       	ldi	r22, 0x01	; 1
 154:	83 e4       	ldi	r24, 0x43	; 67
 156:	0e 94 a5 01 	call	0x34a	; 0x34a <Button_eninit>
	DIO_enSetPortDirection(PORT_A,0xff);
 15a:	6f ef       	ldi	r22, 0xFF	; 255
 15c:	81 e4       	ldi	r24, 0x41	; 65
 15e:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <DIO_enSetPortDirection>
	DIO_SetPinDirection(PORT_B,PIN0,OUT);
 162:	41 e0       	ldi	r20, 0x01	; 1
 164:	60 e0       	ldi	r22, 0x00	; 0
 166:	82 e4       	ldi	r24, 0x42	; 66
 168:	0e 94 21 02 	call	0x442	; 0x442 <DIO_SetPinDirection>
	DIO_SetPinDirection(PORT_B,PIN1,OUT);
 16c:	41 e0       	ldi	r20, 0x01	; 1
 16e:	61 e0       	ldi	r22, 0x01	; 1
 170:	82 e4       	ldi	r24, 0x42	; 66
 172:	0e 94 21 02 	call	0x442	; 0x442 <DIO_SetPinDirection>
	// multiplexing
	DIO_SetPinValue(PORT_B,PIN0,HIGH);// dis common cathode b
 176:	41 e0       	ldi	r20, 0x01	; 1
 178:	60 e0       	ldi	r22, 0x00	; 0
 17a:	82 e4       	ldi	r24, 0x42	; 66
 17c:	0e 94 ba 02 	call	0x574	; 0x574 <DIO_SetPinValue>
	DIO_SetPinValue(PORT_B,PIN1,HIGH);// dis common cathode a
 180:	41 e0       	ldi	r20, 0x01	; 1
 182:	61 e0       	ldi	r22, 0x01	; 1
 184:	82 e4       	ldi	r24, 0x42	; 66
 186:	0e 94 ba 02 	call	0x574	; 0x574 <DIO_SetPinValue>
		0x7D, 0x07, 0x7F,
	0x6F};
	uint8_t i=5;
	uint8_t j=0;
	uint8_t val;
	uint8_t num = 49;
 18a:	11 e3       	ldi	r17, 0x31	; 49
	DIO_SetPinValue(PORT_B,PIN1,HIGH);// dis common cathode a
	
	
	while(1)
	{
		if(Button_Getstate(PORT_C,PIN0,&val)&&val==0)
 18c:	ae 01       	movw	r20, r28
 18e:	45 5f       	subi	r20, 0xF5	; 245
 190:	5f 4f       	sbci	r21, 0xFF	; 255
 192:	60 e0       	ldi	r22, 0x00	; 0
 194:	83 e4       	ldi	r24, 0x43	; 67
 196:	0e 94 be 01 	call	0x37c	; 0x37c <Button_Getstate>
 19a:	88 23       	and	r24, r24
 19c:	09 f4       	brne	.+2      	; 0x1a0 <Control_2Mltiplexed_7Seg_usingTwoPush+0x80>
 19e:	7e c0       	rjmp	.+252    	; 0x29c <Control_2Mltiplexed_7Seg_usingTwoPush+0x17c>
 1a0:	8b 85       	ldd	r24, Y+11	; 0x0b
 1a2:	81 11       	cpse	r24, r1
 1a4:	7b c0       	rjmp	.+246    	; 0x29c <Control_2Mltiplexed_7Seg_usingTwoPush+0x17c>
		{
			++num;
 1a6:	1f 5f       	subi	r17, 0xFF	; 255
			if(num>99)
 1a8:	14 36       	cpi	r17, 0x64	; 100
 1aa:	78 f1       	brcs	.+94     	; 0x20a <Control_2Mltiplexed_7Seg_usingTwoPush+0xea>
			{
				num=50;
				i= num/10;
				j= num%10;
				DIO_SetPinValue(PORT_B,PIN0,HIGH);// dis common cathode b
 1ac:	41 e0       	ldi	r20, 0x01	; 1
 1ae:	60 e0       	ldi	r22, 0x00	; 0
 1b0:	82 e4       	ldi	r24, 0x42	; 66
 1b2:	0e 94 ba 02 	call	0x574	; 0x574 <DIO_SetPinValue>
				DIO_enSetPortValue(PORT_A,NumDisplay[j]);
 1b6:	6f e3       	ldi	r22, 0x3F	; 63
 1b8:	81 e4       	ldi	r24, 0x41	; 65
 1ba:	0e 94 02 02 	call	0x404	; 0x404 <DIO_enSetPortValue>
				DIO_SetPinValue(PORT_B,PIN1,LOW);// EN common cathode a
 1be:	40 e0       	ldi	r20, 0x00	; 0
 1c0:	61 e0       	ldi	r22, 0x01	; 1
 1c2:	82 e4       	ldi	r24, 0x42	; 66
 1c4:	0e 94 ba 02 	call	0x574	; 0x574 <DIO_SetPinValue>
				DIO_SetPinValue(PORT_B,PIN0,HIGH);// dis common cathode b
 1c8:	41 e0       	ldi	r20, 0x01	; 1
 1ca:	60 e0       	ldi	r22, 0x00	; 0
 1cc:	82 e4       	ldi	r24, 0x42	; 66
 1ce:	0e 94 ba 02 	call	0x574	; 0x574 <DIO_SetPinValue>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1d2:	8b e4       	ldi	r24, 0x4B	; 75
 1d4:	9d e1       	ldi	r25, 0x1D	; 29
 1d6:	01 97       	sbiw	r24, 0x01	; 1
 1d8:	f1 f7       	brne	.-4      	; 0x1d6 <Control_2Mltiplexed_7Seg_usingTwoPush+0xb6>
 1da:	00 c0       	rjmp	.+0      	; 0x1dc <Control_2Mltiplexed_7Seg_usingTwoPush+0xbc>
 1dc:	00 00       	nop
				_delay_ms(30);
				DIO_SetPinValue(PORT_B,PIN1,HIGH);// dis common cathode a
 1de:	41 e0       	ldi	r20, 0x01	; 1
 1e0:	61 e0       	ldi	r22, 0x01	; 1
 1e2:	82 e4       	ldi	r24, 0x42	; 66
 1e4:	0e 94 ba 02 	call	0x574	; 0x574 <DIO_SetPinValue>
				DIO_enSetPortValue(PORT_A,NumDisplay[i]);
 1e8:	6d e6       	ldi	r22, 0x6D	; 109
 1ea:	81 e4       	ldi	r24, 0x41	; 65
 1ec:	0e 94 02 02 	call	0x404	; 0x404 <DIO_enSetPortValue>
				DIO_SetPinValue(PORT_B,PIN0,LOW);// EN common cathode b
 1f0:	40 e0       	ldi	r20, 0x00	; 0
 1f2:	60 e0       	ldi	r22, 0x00	; 0
 1f4:	82 e4       	ldi	r24, 0x42	; 66
 1f6:	0e 94 ba 02 	call	0x574	; 0x574 <DIO_SetPinValue>
 1fa:	8b e4       	ldi	r24, 0x4B	; 75
 1fc:	9d e1       	ldi	r25, 0x1D	; 29
 1fe:	01 97       	sbiw	r24, 0x01	; 1
 200:	f1 f7       	brne	.-4      	; 0x1fe <Control_2Mltiplexed_7Seg_usingTwoPush+0xde>
 202:	00 c0       	rjmp	.+0      	; 0x204 <Control_2Mltiplexed_7Seg_usingTwoPush+0xe4>
 204:	00 00       	nop
		if(Button_Getstate(PORT_C,PIN0,&val)&&val==0)
		{
			++num;
			if(num>99)
			{
				num=50;
 206:	12 e3       	ldi	r17, 0x32	; 50
 208:	c1 cf       	rjmp	.-126    	; 0x18c <Control_2Mltiplexed_7Seg_usingTwoPush+0x6c>
				_delay_ms(30);
				
			}
			else
			{
				i= num/10;
 20a:	0d ec       	ldi	r16, 0xCD	; 205
 20c:	10 9f       	mul	r17, r16
 20e:	01 2d       	mov	r16, r1
 210:	11 24       	eor	r1, r1
 212:	06 95       	lsr	r16
 214:	06 95       	lsr	r16
 216:	06 95       	lsr	r16
				j= num%10;
 218:	90 2f       	mov	r25, r16
 21a:	99 0f       	add	r25, r25
 21c:	89 2f       	mov	r24, r25
 21e:	88 0f       	add	r24, r24
 220:	88 0f       	add	r24, r24
 222:	89 0f       	add	r24, r25
 224:	f1 2e       	mov	r15, r17
 226:	f8 1a       	sub	r15, r24
				DIO_SetPinValue(PORT_B,PIN0,HIGH);// dis common cathode b
 228:	41 e0       	ldi	r20, 0x01	; 1
 22a:	60 e0       	ldi	r22, 0x00	; 0
 22c:	82 e4       	ldi	r24, 0x42	; 66
 22e:	0e 94 ba 02 	call	0x574	; 0x574 <DIO_SetPinValue>
				DIO_enSetPortValue(PORT_A,NumDisplay[j]);
 232:	e1 e0       	ldi	r30, 0x01	; 1
 234:	f0 e0       	ldi	r31, 0x00	; 0
 236:	ec 0f       	add	r30, r28
 238:	fd 1f       	adc	r31, r29
 23a:	ef 0d       	add	r30, r15
 23c:	f1 1d       	adc	r31, r1
 23e:	60 81       	ld	r22, Z
 240:	81 e4       	ldi	r24, 0x41	; 65
 242:	0e 94 02 02 	call	0x404	; 0x404 <DIO_enSetPortValue>
				DIO_SetPinValue(PORT_B,PIN1,LOW);// EN common cathode a
 246:	40 e0       	ldi	r20, 0x00	; 0
 248:	61 e0       	ldi	r22, 0x01	; 1
 24a:	82 e4       	ldi	r24, 0x42	; 66
 24c:	0e 94 ba 02 	call	0x574	; 0x574 <DIO_SetPinValue>
				DIO_SetPinValue(PORT_B,PIN0,HIGH);// dis common cathode b
 250:	41 e0       	ldi	r20, 0x01	; 1
 252:	60 e0       	ldi	r22, 0x00	; 0
 254:	82 e4       	ldi	r24, 0x42	; 66
 256:	0e 94 ba 02 	call	0x574	; 0x574 <DIO_SetPinValue>
 25a:	8b e4       	ldi	r24, 0x4B	; 75
 25c:	9d e1       	ldi	r25, 0x1D	; 29
 25e:	01 97       	sbiw	r24, 0x01	; 1
 260:	f1 f7       	brne	.-4      	; 0x25e <Control_2Mltiplexed_7Seg_usingTwoPush+0x13e>
 262:	00 c0       	rjmp	.+0      	; 0x264 <Control_2Mltiplexed_7Seg_usingTwoPush+0x144>
 264:	00 00       	nop
				_delay_ms(30);
				DIO_SetPinValue(PORT_B,PIN1,HIGH);// dis common cathode a
 266:	41 e0       	ldi	r20, 0x01	; 1
 268:	61 e0       	ldi	r22, 0x01	; 1
 26a:	82 e4       	ldi	r24, 0x42	; 66
 26c:	0e 94 ba 02 	call	0x574	; 0x574 <DIO_SetPinValue>
				DIO_enSetPortValue(PORT_A,NumDisplay[i]);
 270:	e1 e0       	ldi	r30, 0x01	; 1
 272:	f0 e0       	ldi	r31, 0x00	; 0
 274:	ec 0f       	add	r30, r28
 276:	fd 1f       	adc	r31, r29
 278:	e0 0f       	add	r30, r16
 27a:	f1 1d       	adc	r31, r1
 27c:	60 81       	ld	r22, Z
 27e:	81 e4       	ldi	r24, 0x41	; 65
 280:	0e 94 02 02 	call	0x404	; 0x404 <DIO_enSetPortValue>
				DIO_SetPinValue(PORT_B,PIN0,LOW);// EN common cathode b
 284:	40 e0       	ldi	r20, 0x00	; 0
 286:	60 e0       	ldi	r22, 0x00	; 0
 288:	82 e4       	ldi	r24, 0x42	; 66
 28a:	0e 94 ba 02 	call	0x574	; 0x574 <DIO_SetPinValue>
 28e:	8b e4       	ldi	r24, 0x4B	; 75
 290:	9d e1       	ldi	r25, 0x1D	; 29
 292:	01 97       	sbiw	r24, 0x01	; 1
 294:	f1 f7       	brne	.-4      	; 0x292 <Control_2Mltiplexed_7Seg_usingTwoPush+0x172>
 296:	00 c0       	rjmp	.+0      	; 0x298 <Control_2Mltiplexed_7Seg_usingTwoPush+0x178>
 298:	00 00       	nop
 29a:	78 cf       	rjmp	.-272    	; 0x18c <Control_2Mltiplexed_7Seg_usingTwoPush+0x6c>
				_delay_ms(30);
			}
			
		}
		else if(Button_Getstate(PORT_C,PIN1,&val)&& val==0)
 29c:	ae 01       	movw	r20, r28
 29e:	45 5f       	subi	r20, 0xF5	; 245
 2a0:	5f 4f       	sbci	r21, 0xFF	; 255
 2a2:	61 e0       	ldi	r22, 0x01	; 1
 2a4:	83 e4       	ldi	r24, 0x43	; 67
 2a6:	0e 94 be 01 	call	0x37c	; 0x37c <Button_Getstate>
 2aa:	88 23       	and	r24, r24
 2ac:	09 f4       	brne	.+2      	; 0x2b0 <Control_2Mltiplexed_7Seg_usingTwoPush+0x190>
 2ae:	6e cf       	rjmp	.-292    	; 0x18c <Control_2Mltiplexed_7Seg_usingTwoPush+0x6c>
 2b0:	8b 85       	ldd	r24, Y+11	; 0x0b
 2b2:	81 11       	cpse	r24, r1
 2b4:	6b cf       	rjmp	.-298    	; 0x18c <Control_2Mltiplexed_7Seg_usingTwoPush+0x6c>
		{
			--num;
 2b6:	11 50       	subi	r17, 0x01	; 1
				DIO_SetPinValue(PORT_B,PIN0,LOW);// EN common cathode b
				_delay_ms(30);
			}
			else
			{
				i= num/10;
 2b8:	0d ec       	ldi	r16, 0xCD	; 205
 2ba:	10 9f       	mul	r17, r16
 2bc:	01 2d       	mov	r16, r1
 2be:	11 24       	eor	r1, r1
 2c0:	06 95       	lsr	r16
 2c2:	06 95       	lsr	r16
 2c4:	06 95       	lsr	r16
				j= num%10;
 2c6:	90 2f       	mov	r25, r16
 2c8:	99 0f       	add	r25, r25
 2ca:	89 2f       	mov	r24, r25
 2cc:	88 0f       	add	r24, r24
 2ce:	88 0f       	add	r24, r24
 2d0:	89 0f       	add	r24, r25
 2d2:	f1 2e       	mov	r15, r17
 2d4:	f8 1a       	sub	r15, r24
				DIO_SetPinValue(PORT_B,PIN0,HIGH);// dis common cathode b
 2d6:	41 e0       	ldi	r20, 0x01	; 1
 2d8:	60 e0       	ldi	r22, 0x00	; 0
 2da:	82 e4       	ldi	r24, 0x42	; 66
 2dc:	0e 94 ba 02 	call	0x574	; 0x574 <DIO_SetPinValue>
				DIO_enSetPortValue(PORT_A,NumDisplay[j]);
 2e0:	e1 e0       	ldi	r30, 0x01	; 1
 2e2:	f0 e0       	ldi	r31, 0x00	; 0
 2e4:	ec 0f       	add	r30, r28
 2e6:	fd 1f       	adc	r31, r29
 2e8:	ef 0d       	add	r30, r15
 2ea:	f1 1d       	adc	r31, r1
 2ec:	60 81       	ld	r22, Z
 2ee:	81 e4       	ldi	r24, 0x41	; 65
 2f0:	0e 94 02 02 	call	0x404	; 0x404 <DIO_enSetPortValue>
				DIO_SetPinValue(PORT_B,PIN1,LOW);// EN common cathode a
 2f4:	40 e0       	ldi	r20, 0x00	; 0
 2f6:	61 e0       	ldi	r22, 0x01	; 1
 2f8:	82 e4       	ldi	r24, 0x42	; 66
 2fa:	0e 94 ba 02 	call	0x574	; 0x574 <DIO_SetPinValue>
				DIO_SetPinValue(PORT_B,PIN0,HIGH);// dis common cathode b
 2fe:	41 e0       	ldi	r20, 0x01	; 1
 300:	60 e0       	ldi	r22, 0x00	; 0
 302:	82 e4       	ldi	r24, 0x42	; 66
 304:	0e 94 ba 02 	call	0x574	; 0x574 <DIO_SetPinValue>
 308:	8b e4       	ldi	r24, 0x4B	; 75
 30a:	9d e1       	ldi	r25, 0x1D	; 29
 30c:	01 97       	sbiw	r24, 0x01	; 1
 30e:	f1 f7       	brne	.-4      	; 0x30c <Control_2Mltiplexed_7Seg_usingTwoPush+0x1ec>
 310:	00 c0       	rjmp	.+0      	; 0x312 <Control_2Mltiplexed_7Seg_usingTwoPush+0x1f2>
 312:	00 00       	nop
				_delay_ms(30);
				DIO_SetPinValue(PORT_B,PIN1,HIGH);// dis common cathode a
 314:	41 e0       	ldi	r20, 0x01	; 1
 316:	61 e0       	ldi	r22, 0x01	; 1
 318:	82 e4       	ldi	r24, 0x42	; 66
 31a:	0e 94 ba 02 	call	0x574	; 0x574 <DIO_SetPinValue>
				DIO_enSetPortValue(PORT_A,NumDisplay[i]);
 31e:	e1 e0       	ldi	r30, 0x01	; 1
 320:	f0 e0       	ldi	r31, 0x00	; 0
 322:	ec 0f       	add	r30, r28
 324:	fd 1f       	adc	r31, r29
 326:	e0 0f       	add	r30, r16
 328:	f1 1d       	adc	r31, r1
 32a:	60 81       	ld	r22, Z
 32c:	81 e4       	ldi	r24, 0x41	; 65
 32e:	0e 94 02 02 	call	0x404	; 0x404 <DIO_enSetPortValue>
				DIO_SetPinValue(PORT_B,PIN0,LOW);// EN common cathode b
 332:	40 e0       	ldi	r20, 0x00	; 0
 334:	60 e0       	ldi	r22, 0x00	; 0
 336:	82 e4       	ldi	r24, 0x42	; 66
 338:	0e 94 ba 02 	call	0x574	; 0x574 <DIO_SetPinValue>
 33c:	8b e4       	ldi	r24, 0x4B	; 75
 33e:	9d e1       	ldi	r25, 0x1D	; 29
 340:	01 97       	sbiw	r24, 0x01	; 1
 342:	f1 f7       	brne	.-4      	; 0x340 <Control_2Mltiplexed_7Seg_usingTwoPush+0x220>
 344:	00 c0       	rjmp	.+0      	; 0x346 <Control_2Mltiplexed_7Seg_usingTwoPush+0x226>
 346:	00 00       	nop
 348:	21 cf       	rjmp	.-446    	; 0x18c <Control_2Mltiplexed_7Seg_usingTwoPush+0x6c>

0000034a <Button_eninit>:
 *  Author: Menna Eid
 */ 

#include "button_interface.h"
ES_t Button_eninit(uint8_t portnumber,uint8_t pinnumber,uint8_t type_conecction)
{
 34a:	1f 93       	push	r17
 34c:	cf 93       	push	r28
 34e:	df 93       	push	r29
	ES_t LocalErrorstate;
	if(portnumber>='A'&& portnumber<='D')
 350:	9f eb       	ldi	r25, 0xBF	; 191
 352:	98 0f       	add	r25, r24
 354:	94 30       	cpi	r25, 0x04	; 4
 356:	68 f4       	brcc	.+26     	; 0x372 <Button_eninit+0x28>
 358:	14 2f       	mov	r17, r20
 35a:	d6 2f       	mov	r29, r22
 35c:	c8 2f       	mov	r28, r24
	{
		DIO_SetPinDirection(portnumber,pinnumber,IN);
 35e:	40 e0       	ldi	r20, 0x00	; 0
 360:	0e 94 21 02 	call	0x442	; 0x442 <DIO_SetPinDirection>
		DIO_SetPinValue(portnumber,pinnumber,type_conecction);
 364:	41 2f       	mov	r20, r17
 366:	6d 2f       	mov	r22, r29
 368:	8c 2f       	mov	r24, r28
 36a:	0e 94 ba 02 	call	0x574	; 0x574 <DIO_SetPinValue>
		LocalErrorstate=ES_OK;
 36e:	81 e0       	ldi	r24, 0x01	; 1
 370:	01 c0       	rjmp	.+2      	; 0x374 <Button_eninit+0x2a>
	}
	else
	{
		LocalErrorstate=ES_NOK;
 372:	80 e0       	ldi	r24, 0x00	; 0
	}
	return LocalErrorstate;
	
}
 374:	df 91       	pop	r29
 376:	cf 91       	pop	r28
 378:	1f 91       	pop	r17
 37a:	08 95       	ret

0000037c <Button_Getstate>:
ES_t Button_Getstate(uint8_t portnumber,uint8_t pinnumber,uint8_t *value)
{
	ES_t LocalErrorstate;
	if(portnumber>='A'&& portnumber<='D')
 37c:	9f eb       	ldi	r25, 0xBF	; 191
 37e:	98 0f       	add	r25, r24
 380:	94 30       	cpi	r25, 0x04	; 4
 382:	20 f4       	brcc	.+8      	; 0x38c <Button_Getstate+0x10>
	{
		DIO_readpinvalue(portnumber,pinnumber,value);
 384:	0e 94 30 03 	call	0x660	; 0x660 <DIO_readpinvalue>
		LocalErrorstate=ES_OK;
 388:	81 e0       	ldi	r24, 0x01	; 1
 38a:	08 95       	ret
	}
	else
	{
		LocalErrorstate=ES_NOK;
 38c:	80 e0       	ldi	r24, 0x00	; 0
	}
	return LocalErrorstate;
 38e:	08 95       	ret

00000390 <led_of>:
	return LocalErrorstate;
}
ES_t led_of(uint8_t ledport,uint8_t ledpin,uint8_t type_connection)
{
	ES_t LocalErrorstate;
	if(ledport>='A' && ledport<='D')
 390:	9f eb       	ldi	r25, 0xBF	; 191
 392:	98 0f       	add	r25, r24
 394:	94 30       	cpi	r25, 0x04	; 4
 396:	70 f4       	brcc	.+28     	; 0x3b4 <led_of+0x24>
	{
		if(type_connection==source)//source
 398:	48 30       	cpi	r20, 0x08	; 8
 39a:	29 f4       	brne	.+10     	; 0x3a6 <led_of+0x16>
		{
			DIO_SetPinValue(ledport,ledpin,LOW);
 39c:	40 e0       	ldi	r20, 0x00	; 0
 39e:	0e 94 ba 02 	call	0x574	; 0x574 <DIO_SetPinValue>
		}
		else if(type_connection==sink)
		{
			DIO_SetPinValue(ledport,ledpin,HIGH);
		}
		LocalErrorstate=ES_OK;
 3a2:	81 e0       	ldi	r24, 0x01	; 1
 3a4:	08 95       	ret
	{
		if(type_connection==source)//source
		{
			DIO_SetPinValue(ledport,ledpin,LOW);
		}
		else if(type_connection==sink)
 3a6:	49 30       	cpi	r20, 0x09	; 9
 3a8:	39 f4       	brne	.+14     	; 0x3b8 <led_of+0x28>
		{
			DIO_SetPinValue(ledport,ledpin,HIGH);
 3aa:	41 e0       	ldi	r20, 0x01	; 1
 3ac:	0e 94 ba 02 	call	0x574	; 0x574 <DIO_SetPinValue>
		}
		LocalErrorstate=ES_OK;
 3b0:	81 e0       	ldi	r24, 0x01	; 1
 3b2:	08 95       	ret
	}
	else
	{
		LocalErrorstate=ES_NOK;
 3b4:	80 e0       	ldi	r24, 0x00	; 0
 3b6:	08 95       	ret
		}
		else if(type_connection==sink)
		{
			DIO_SetPinValue(ledport,ledpin,HIGH);
		}
		LocalErrorstate=ES_OK;
 3b8:	81 e0       	ldi	r24, 0x01	; 1
	else
	{
		LocalErrorstate=ES_NOK;
	}
	return LocalErrorstate;
}
 3ba:	08 95       	ret

000003bc <main>:


int main(void)
{
	
	Control_2Mltiplexed_7Seg_usingTwoPush();
 3bc:	0e 94 90 00 	call	0x120	; 0x120 <Control_2Mltiplexed_7Seg_usingTwoPush>
}	
 3c0:	80 e0       	ldi	r24, 0x00	; 0
 3c2:	90 e0       	ldi	r25, 0x00	; 0
 3c4:	08 95       	ret

000003c6 <DIO_enSetPortDirection>:
	else
	{
		Local_enErrorstate=ES_NOK;
	}
	return Local_enErrorstate;
}
 3c6:	9f eb       	ldi	r25, 0xBF	; 191
 3c8:	98 0f       	add	r25, r24
 3ca:	94 30       	cpi	r25, 0x04	; 4
 3cc:	b8 f4       	brcc	.+46     	; 0x3fc <DIO_enSetPortDirection+0x36>
 3ce:	82 34       	cpi	r24, 0x42	; 66
 3d0:	61 f0       	breq	.+24     	; 0x3ea <DIO_enSetPortDirection+0x24>
 3d2:	18 f4       	brcc	.+6      	; 0x3da <DIO_enSetPortDirection+0x14>
 3d4:	81 34       	cpi	r24, 0x41	; 65
 3d6:	31 f0       	breq	.+12     	; 0x3e4 <DIO_enSetPortDirection+0x1e>
 3d8:	13 c0       	rjmp	.+38     	; 0x400 <__EEPROM_REGION_LENGTH__>
 3da:	83 34       	cpi	r24, 0x43	; 67
 3dc:	49 f0       	breq	.+18     	; 0x3f0 <DIO_enSetPortDirection+0x2a>
 3de:	84 34       	cpi	r24, 0x44	; 68
 3e0:	51 f0       	breq	.+20     	; 0x3f6 <DIO_enSetPortDirection+0x30>
 3e2:	0e c0       	rjmp	.+28     	; 0x400 <__EEPROM_REGION_LENGTH__>
 3e4:	6a bb       	out	0x1a, r22	; 26
 3e6:	81 e0       	ldi	r24, 0x01	; 1
 3e8:	08 95       	ret
 3ea:	67 bb       	out	0x17, r22	; 23
 3ec:	81 e0       	ldi	r24, 0x01	; 1
 3ee:	08 95       	ret
 3f0:	64 bb       	out	0x14, r22	; 20
 3f2:	81 e0       	ldi	r24, 0x01	; 1
 3f4:	08 95       	ret
 3f6:	61 bb       	out	0x11, r22	; 17
 3f8:	81 e0       	ldi	r24, 0x01	; 1
 3fa:	08 95       	ret
 3fc:	80 e0       	ldi	r24, 0x00	; 0
 3fe:	08 95       	ret
 400:	81 e0       	ldi	r24, 0x01	; 1
 402:	08 95       	ret

00000404 <DIO_enSetPortValue>:
 404:	9f eb       	ldi	r25, 0xBF	; 191
 406:	98 0f       	add	r25, r24
 408:	94 30       	cpi	r25, 0x04	; 4
 40a:	b8 f4       	brcc	.+46     	; 0x43a <DIO_enSetPortValue+0x36>
 40c:	82 34       	cpi	r24, 0x42	; 66
 40e:	61 f0       	breq	.+24     	; 0x428 <DIO_enSetPortValue+0x24>
 410:	18 f4       	brcc	.+6      	; 0x418 <DIO_enSetPortValue+0x14>
 412:	81 34       	cpi	r24, 0x41	; 65
 414:	31 f0       	breq	.+12     	; 0x422 <DIO_enSetPortValue+0x1e>
 416:	13 c0       	rjmp	.+38     	; 0x43e <DIO_enSetPortValue+0x3a>
 418:	83 34       	cpi	r24, 0x43	; 67
 41a:	49 f0       	breq	.+18     	; 0x42e <DIO_enSetPortValue+0x2a>
 41c:	84 34       	cpi	r24, 0x44	; 68
 41e:	51 f0       	breq	.+20     	; 0x434 <DIO_enSetPortValue+0x30>
 420:	0e c0       	rjmp	.+28     	; 0x43e <DIO_enSetPortValue+0x3a>
 422:	6b bb       	out	0x1b, r22	; 27
 424:	81 e0       	ldi	r24, 0x01	; 1
 426:	08 95       	ret
 428:	68 bb       	out	0x18, r22	; 24
 42a:	81 e0       	ldi	r24, 0x01	; 1
 42c:	08 95       	ret
 42e:	65 bb       	out	0x15, r22	; 21
 430:	81 e0       	ldi	r24, 0x01	; 1
 432:	08 95       	ret
 434:	62 bb       	out	0x12, r22	; 18
 436:	81 e0       	ldi	r24, 0x01	; 1
 438:	08 95       	ret
 43a:	80 e0       	ldi	r24, 0x00	; 0
 43c:	08 95       	ret
 43e:	81 e0       	ldi	r24, 0x01	; 1
 440:	08 95       	ret

00000442 <DIO_SetPinDirection>:
ES_t DIO_SetPinDirection(uint8_t portnumber,uint8_t pinnumber,uint8_t direction)
{
	ES_t Local_Errorstate;
	if(portnumber>='A' && portnumber<='D' && direction<=OUT)
 442:	9f eb       	ldi	r25, 0xBF	; 191
 444:	98 0f       	add	r25, r24
 446:	94 30       	cpi	r25, 0x04	; 4
 448:	08 f0       	brcs	.+2      	; 0x44c <DIO_SetPinDirection+0xa>
 44a:	86 c0       	rjmp	.+268    	; 0x558 <DIO_SetPinDirection+0x116>
 44c:	42 30       	cpi	r20, 0x02	; 2
 44e:	08 f0       	brcs	.+2      	; 0x452 <DIO_SetPinDirection+0x10>
 450:	85 c0       	rjmp	.+266    	; 0x55c <DIO_SetPinDirection+0x11a>
	{
	 switch(portnumber)
 452:	82 34       	cpi	r24, 0x42	; 66
 454:	49 f1       	breq	.+82     	; 0x4a8 <DIO_SetPinDirection+0x66>
 456:	18 f4       	brcc	.+6      	; 0x45e <DIO_SetPinDirection+0x1c>
 458:	81 34       	cpi	r24, 0x41	; 65
 45a:	41 f0       	breq	.+16     	; 0x46c <DIO_SetPinDirection+0x2a>
 45c:	81 c0       	rjmp	.+258    	; 0x560 <DIO_SetPinDirection+0x11e>
 45e:	83 34       	cpi	r24, 0x43	; 67
 460:	09 f4       	brne	.+2      	; 0x464 <DIO_SetPinDirection+0x22>
 462:	40 c0       	rjmp	.+128    	; 0x4e4 <DIO_SetPinDirection+0xa2>
 464:	84 34       	cpi	r24, 0x44	; 68
 466:	09 f4       	brne	.+2      	; 0x46a <DIO_SetPinDirection+0x28>
 468:	5a c0       	rjmp	.+180    	; 0x51e <DIO_SetPinDirection+0xdc>
 46a:	7a c0       	rjmp	.+244    	; 0x560 <DIO_SetPinDirection+0x11e>
	 {
		case PORT_A:
		    if(direction==IN)
 46c:	41 11       	cpse	r20, r1
 46e:	0d c0       	rjmp	.+26     	; 0x48a <DIO_SetPinDirection+0x48>
			{
				DDRA &= ~(1<<pinnumber);
 470:	2a b3       	in	r18, 0x1a	; 26
 472:	81 e0       	ldi	r24, 0x01	; 1
 474:	90 e0       	ldi	r25, 0x00	; 0
 476:	02 c0       	rjmp	.+4      	; 0x47c <DIO_SetPinDirection+0x3a>
 478:	88 0f       	add	r24, r24
 47a:	99 1f       	adc	r25, r25
 47c:	6a 95       	dec	r22
 47e:	e2 f7       	brpl	.-8      	; 0x478 <DIO_SetPinDirection+0x36>
 480:	80 95       	com	r24
 482:	82 23       	and	r24, r18
 484:	8a bb       	out	0x1a, r24	; 26
		    {
			    DDRD |=(1<<pinnumber);
		    }
		break; 
	}
	Local_Errorstate =ES_OK;
 486:	81 e0       	ldi	r24, 0x01	; 1
 488:	08 95       	ret
		case PORT_A:
		    if(direction==IN)
			{
				DDRA &= ~(1<<pinnumber);
			}
			else if(direction==OUT)
 48a:	41 30       	cpi	r20, 0x01	; 1
 48c:	09 f0       	breq	.+2      	; 0x490 <DIO_SetPinDirection+0x4e>
 48e:	6a c0       	rjmp	.+212    	; 0x564 <DIO_SetPinDirection+0x122>
			{
				DDRA |=(1<<pinnumber);
 490:	2a b3       	in	r18, 0x1a	; 26
 492:	81 e0       	ldi	r24, 0x01	; 1
 494:	90 e0       	ldi	r25, 0x00	; 0
 496:	02 c0       	rjmp	.+4      	; 0x49c <DIO_SetPinDirection+0x5a>
 498:	88 0f       	add	r24, r24
 49a:	99 1f       	adc	r25, r25
 49c:	6a 95       	dec	r22
 49e:	e2 f7       	brpl	.-8      	; 0x498 <DIO_SetPinDirection+0x56>
 4a0:	82 2b       	or	r24, r18
 4a2:	8a bb       	out	0x1a, r24	; 26
		    {
			    DDRD |=(1<<pinnumber);
		    }
		break; 
	}
	Local_Errorstate =ES_OK;
 4a4:	81 e0       	ldi	r24, 0x01	; 1
 4a6:	08 95       	ret
			{
				DDRA |=(1<<pinnumber);
			}
		break;
		case PORT_B:
		    if(direction==IN)
 4a8:	41 11       	cpse	r20, r1
 4aa:	0d c0       	rjmp	.+26     	; 0x4c6 <DIO_SetPinDirection+0x84>
		    {
			    DDRB &= ~(1<<pinnumber);
 4ac:	27 b3       	in	r18, 0x17	; 23
 4ae:	81 e0       	ldi	r24, 0x01	; 1
 4b0:	90 e0       	ldi	r25, 0x00	; 0
 4b2:	02 c0       	rjmp	.+4      	; 0x4b8 <DIO_SetPinDirection+0x76>
 4b4:	88 0f       	add	r24, r24
 4b6:	99 1f       	adc	r25, r25
 4b8:	6a 95       	dec	r22
 4ba:	e2 f7       	brpl	.-8      	; 0x4b4 <DIO_SetPinDirection+0x72>
 4bc:	80 95       	com	r24
 4be:	82 23       	and	r24, r18
 4c0:	87 bb       	out	0x17, r24	; 23
		    {
			    DDRD |=(1<<pinnumber);
		    }
		break; 
	}
	Local_Errorstate =ES_OK;
 4c2:	81 e0       	ldi	r24, 0x01	; 1
 4c4:	08 95       	ret
		case PORT_B:
		    if(direction==IN)
		    {
			    DDRB &= ~(1<<pinnumber);
		    }
		    else if(direction==OUT)
 4c6:	41 30       	cpi	r20, 0x01	; 1
 4c8:	09 f0       	breq	.+2      	; 0x4cc <DIO_SetPinDirection+0x8a>
 4ca:	4e c0       	rjmp	.+156    	; 0x568 <DIO_SetPinDirection+0x126>
		    {
			    DDRB |=(1<<pinnumber);
 4cc:	27 b3       	in	r18, 0x17	; 23
 4ce:	81 e0       	ldi	r24, 0x01	; 1
 4d0:	90 e0       	ldi	r25, 0x00	; 0
 4d2:	02 c0       	rjmp	.+4      	; 0x4d8 <DIO_SetPinDirection+0x96>
 4d4:	88 0f       	add	r24, r24
 4d6:	99 1f       	adc	r25, r25
 4d8:	6a 95       	dec	r22
 4da:	e2 f7       	brpl	.-8      	; 0x4d4 <DIO_SetPinDirection+0x92>
 4dc:	82 2b       	or	r24, r18
 4de:	87 bb       	out	0x17, r24	; 23
		    {
			    DDRD |=(1<<pinnumber);
		    }
		break; 
	}
	Local_Errorstate =ES_OK;
 4e0:	81 e0       	ldi	r24, 0x01	; 1
 4e2:	08 95       	ret
		    {
			    DDRB |=(1<<pinnumber);
		    }
		break;
		case PORT_C:
		    if(direction==IN)
 4e4:	41 11       	cpse	r20, r1
 4e6:	0d c0       	rjmp	.+26     	; 0x502 <DIO_SetPinDirection+0xc0>
		    {
			    DDRC &= ~(1<<pinnumber);
 4e8:	24 b3       	in	r18, 0x14	; 20
 4ea:	81 e0       	ldi	r24, 0x01	; 1
 4ec:	90 e0       	ldi	r25, 0x00	; 0
 4ee:	02 c0       	rjmp	.+4      	; 0x4f4 <DIO_SetPinDirection+0xb2>
 4f0:	88 0f       	add	r24, r24
 4f2:	99 1f       	adc	r25, r25
 4f4:	6a 95       	dec	r22
 4f6:	e2 f7       	brpl	.-8      	; 0x4f0 <DIO_SetPinDirection+0xae>
 4f8:	80 95       	com	r24
 4fa:	82 23       	and	r24, r18
 4fc:	84 bb       	out	0x14, r24	; 20
		    {
			    DDRD |=(1<<pinnumber);
		    }
		break; 
	}
	Local_Errorstate =ES_OK;
 4fe:	81 e0       	ldi	r24, 0x01	; 1
 500:	08 95       	ret
		case PORT_C:
		    if(direction==IN)
		    {
			    DDRC &= ~(1<<pinnumber);
		    }
		    else if(direction==OUT)
 502:	41 30       	cpi	r20, 0x01	; 1
 504:	99 f5       	brne	.+102    	; 0x56c <DIO_SetPinDirection+0x12a>
		    {
			    DDRC |=(1<<pinnumber);
 506:	24 b3       	in	r18, 0x14	; 20
 508:	81 e0       	ldi	r24, 0x01	; 1
 50a:	90 e0       	ldi	r25, 0x00	; 0
 50c:	02 c0       	rjmp	.+4      	; 0x512 <DIO_SetPinDirection+0xd0>
 50e:	88 0f       	add	r24, r24
 510:	99 1f       	adc	r25, r25
 512:	6a 95       	dec	r22
 514:	e2 f7       	brpl	.-8      	; 0x50e <DIO_SetPinDirection+0xcc>
 516:	82 2b       	or	r24, r18
 518:	84 bb       	out	0x14, r24	; 20
		    {
			    DDRD |=(1<<pinnumber);
		    }
		break; 
	}
	Local_Errorstate =ES_OK;
 51a:	81 e0       	ldi	r24, 0x01	; 1
 51c:	08 95       	ret
		    {
			    DDRC |=(1<<pinnumber);
		    }
		break;
		case PORT_D:
		    if(direction==IN)
 51e:	41 11       	cpse	r20, r1
 520:	0d c0       	rjmp	.+26     	; 0x53c <DIO_SetPinDirection+0xfa>
		    {
			    DDRD &= ~(1<<pinnumber);
 522:	21 b3       	in	r18, 0x11	; 17
 524:	81 e0       	ldi	r24, 0x01	; 1
 526:	90 e0       	ldi	r25, 0x00	; 0
 528:	02 c0       	rjmp	.+4      	; 0x52e <DIO_SetPinDirection+0xec>
 52a:	88 0f       	add	r24, r24
 52c:	99 1f       	adc	r25, r25
 52e:	6a 95       	dec	r22
 530:	e2 f7       	brpl	.-8      	; 0x52a <DIO_SetPinDirection+0xe8>
 532:	80 95       	com	r24
 534:	82 23       	and	r24, r18
 536:	81 bb       	out	0x11, r24	; 17
		    {
			    DDRD |=(1<<pinnumber);
		    }
		break; 
	}
	Local_Errorstate =ES_OK;
 538:	81 e0       	ldi	r24, 0x01	; 1
 53a:	08 95       	ret
		case PORT_D:
		    if(direction==IN)
		    {
			    DDRD &= ~(1<<pinnumber);
		    }
		    else if(direction==OUT)
 53c:	41 30       	cpi	r20, 0x01	; 1
 53e:	c1 f4       	brne	.+48     	; 0x570 <DIO_SetPinDirection+0x12e>
		    {
			    DDRD |=(1<<pinnumber);
 540:	21 b3       	in	r18, 0x11	; 17
 542:	81 e0       	ldi	r24, 0x01	; 1
 544:	90 e0       	ldi	r25, 0x00	; 0
 546:	02 c0       	rjmp	.+4      	; 0x54c <DIO_SetPinDirection+0x10a>
 548:	88 0f       	add	r24, r24
 54a:	99 1f       	adc	r25, r25
 54c:	6a 95       	dec	r22
 54e:	e2 f7       	brpl	.-8      	; 0x548 <DIO_SetPinDirection+0x106>
 550:	82 2b       	or	r24, r18
 552:	81 bb       	out	0x11, r24	; 17
		    }
		break; 
	}
	Local_Errorstate =ES_OK;
 554:	81 e0       	ldi	r24, 0x01	; 1
 556:	08 95       	ret
  }
  else
  {
	  Local_Errorstate = ES_NOK;
 558:	80 e0       	ldi	r24, 0x00	; 0
 55a:	08 95       	ret
 55c:	80 e0       	ldi	r24, 0x00	; 0
 55e:	08 95       	ret
		    {
			    DDRD |=(1<<pinnumber);
		    }
		break; 
	}
	Local_Errorstate =ES_OK;
 560:	81 e0       	ldi	r24, 0x01	; 1
 562:	08 95       	ret
 564:	81 e0       	ldi	r24, 0x01	; 1
 566:	08 95       	ret
 568:	81 e0       	ldi	r24, 0x01	; 1
 56a:	08 95       	ret
 56c:	81 e0       	ldi	r24, 0x01	; 1
 56e:	08 95       	ret
 570:	81 e0       	ldi	r24, 0x01	; 1
  else
  {
	  Local_Errorstate = ES_NOK;
  }
  return Local_Errorstate;
}
 572:	08 95       	ret

00000574 <DIO_SetPinValue>:
ES_t DIO_SetPinValue(uint8_t portnumber,uint8_t pinnumber,uint8_t value)
{
	ES_t Local_Errorstate;
    if(portnumber>='A' && portnumber<='D' && value<=OUT)
 574:	9f eb       	ldi	r25, 0xBF	; 191
 576:	98 0f       	add	r25, r24
 578:	94 30       	cpi	r25, 0x04	; 4
 57a:	08 f0       	brcs	.+2      	; 0x57e <DIO_SetPinValue+0xa>
 57c:	6b c0       	rjmp	.+214    	; 0x654 <DIO_SetPinValue+0xe0>
 57e:	42 30       	cpi	r20, 0x02	; 2
 580:	08 f0       	brcs	.+2      	; 0x584 <DIO_SetPinValue+0x10>
 582:	6a c0       	rjmp	.+212    	; 0x658 <DIO_SetPinValue+0xe4>
    {
		switch(portnumber)
 584:	82 34       	cpi	r24, 0x42	; 66
 586:	09 f1       	breq	.+66     	; 0x5ca <DIO_SetPinValue+0x56>
 588:	18 f4       	brcc	.+6      	; 0x590 <DIO_SetPinValue+0x1c>
 58a:	81 34       	cpi	r24, 0x41	; 65
 58c:	39 f0       	breq	.+14     	; 0x59c <DIO_SetPinValue+0x28>
 58e:	66 c0       	rjmp	.+204    	; 0x65c <DIO_SetPinValue+0xe8>
 590:	83 34       	cpi	r24, 0x43	; 67
 592:	91 f1       	breq	.+100    	; 0x5f8 <DIO_SetPinValue+0x84>
 594:	84 34       	cpi	r24, 0x44	; 68
 596:	09 f4       	brne	.+2      	; 0x59a <DIO_SetPinValue+0x26>
 598:	46 c0       	rjmp	.+140    	; 0x626 <DIO_SetPinValue+0xb2>
 59a:	60 c0       	rjmp	.+192    	; 0x65c <DIO_SetPinValue+0xe8>
		{
			case PORT_A:
				PORTA &=~(1<<pinnumber);//Mask
 59c:	2b b3       	in	r18, 0x1b	; 27
 59e:	81 e0       	ldi	r24, 0x01	; 1
 5a0:	90 e0       	ldi	r25, 0x00	; 0
 5a2:	06 2e       	mov	r0, r22
 5a4:	02 c0       	rjmp	.+4      	; 0x5aa <DIO_SetPinValue+0x36>
 5a6:	88 0f       	add	r24, r24
 5a8:	99 1f       	adc	r25, r25
 5aa:	0a 94       	dec	r0
 5ac:	e2 f7       	brpl	.-8      	; 0x5a6 <DIO_SetPinValue+0x32>
 5ae:	80 95       	com	r24
 5b0:	82 23       	and	r24, r18
 5b2:	8b bb       	out	0x1b, r24	; 27
				PORTA |=(value<<pinnumber);	
 5b4:	8b b3       	in	r24, 0x1b	; 27
 5b6:	50 e0       	ldi	r21, 0x00	; 0
 5b8:	02 c0       	rjmp	.+4      	; 0x5be <DIO_SetPinValue+0x4a>
 5ba:	44 0f       	add	r20, r20
 5bc:	55 1f       	adc	r21, r21
 5be:	6a 95       	dec	r22
 5c0:	e2 f7       	brpl	.-8      	; 0x5ba <DIO_SetPinValue+0x46>
 5c2:	48 2b       	or	r20, r24
 5c4:	4b bb       	out	0x1b, r20	; 27
				PORTD &=~(1<<pinnumber);//Mask
				PORTD |=(value<<pinnumber);
				break;
			
		}
		Local_Errorstate =ES_OK;
 5c6:	81 e0       	ldi	r24, 0x01	; 1
		switch(portnumber)
		{
			case PORT_A:
				PORTA &=~(1<<pinnumber);//Mask
				PORTA |=(value<<pinnumber);	
			    break;
 5c8:	08 95       	ret
			case PORT_B:
				PORTB &=~(1<<pinnumber);//Mask
 5ca:	28 b3       	in	r18, 0x18	; 24
 5cc:	81 e0       	ldi	r24, 0x01	; 1
 5ce:	90 e0       	ldi	r25, 0x00	; 0
 5d0:	06 2e       	mov	r0, r22
 5d2:	02 c0       	rjmp	.+4      	; 0x5d8 <DIO_SetPinValue+0x64>
 5d4:	88 0f       	add	r24, r24
 5d6:	99 1f       	adc	r25, r25
 5d8:	0a 94       	dec	r0
 5da:	e2 f7       	brpl	.-8      	; 0x5d4 <DIO_SetPinValue+0x60>
 5dc:	80 95       	com	r24
 5de:	82 23       	and	r24, r18
 5e0:	88 bb       	out	0x18, r24	; 24
				PORTB |=(value<<pinnumber);
 5e2:	88 b3       	in	r24, 0x18	; 24
 5e4:	50 e0       	ldi	r21, 0x00	; 0
 5e6:	02 c0       	rjmp	.+4      	; 0x5ec <DIO_SetPinValue+0x78>
 5e8:	44 0f       	add	r20, r20
 5ea:	55 1f       	adc	r21, r21
 5ec:	6a 95       	dec	r22
 5ee:	e2 f7       	brpl	.-8      	; 0x5e8 <DIO_SetPinValue+0x74>
 5f0:	48 2b       	or	r20, r24
 5f2:	48 bb       	out	0x18, r20	; 24
				PORTD &=~(1<<pinnumber);//Mask
				PORTD |=(value<<pinnumber);
				break;
			
		}
		Local_Errorstate =ES_OK;
 5f4:	81 e0       	ldi	r24, 0x01	; 1
				PORTA |=(value<<pinnumber);	
			    break;
			case PORT_B:
				PORTB &=~(1<<pinnumber);//Mask
				PORTB |=(value<<pinnumber);
				break;
 5f6:	08 95       	ret
			case PORT_C:
				PORTC &=~(1<<pinnumber);//Mask
 5f8:	25 b3       	in	r18, 0x15	; 21
 5fa:	81 e0       	ldi	r24, 0x01	; 1
 5fc:	90 e0       	ldi	r25, 0x00	; 0
 5fe:	06 2e       	mov	r0, r22
 600:	02 c0       	rjmp	.+4      	; 0x606 <DIO_SetPinValue+0x92>
 602:	88 0f       	add	r24, r24
 604:	99 1f       	adc	r25, r25
 606:	0a 94       	dec	r0
 608:	e2 f7       	brpl	.-8      	; 0x602 <DIO_SetPinValue+0x8e>
 60a:	80 95       	com	r24
 60c:	82 23       	and	r24, r18
 60e:	85 bb       	out	0x15, r24	; 21
				PORTC |=(value<<pinnumber);
 610:	85 b3       	in	r24, 0x15	; 21
 612:	50 e0       	ldi	r21, 0x00	; 0
 614:	02 c0       	rjmp	.+4      	; 0x61a <DIO_SetPinValue+0xa6>
 616:	44 0f       	add	r20, r20
 618:	55 1f       	adc	r21, r21
 61a:	6a 95       	dec	r22
 61c:	e2 f7       	brpl	.-8      	; 0x616 <DIO_SetPinValue+0xa2>
 61e:	48 2b       	or	r20, r24
 620:	45 bb       	out	0x15, r20	; 21
				PORTD &=~(1<<pinnumber);//Mask
				PORTD |=(value<<pinnumber);
				break;
			
		}
		Local_Errorstate =ES_OK;
 622:	81 e0       	ldi	r24, 0x01	; 1
				PORTB |=(value<<pinnumber);
				break;
			case PORT_C:
				PORTC &=~(1<<pinnumber);//Mask
				PORTC |=(value<<pinnumber);
				break;
 624:	08 95       	ret
			case PORT_D:
				PORTD &=~(1<<pinnumber);//Mask
 626:	22 b3       	in	r18, 0x12	; 18
 628:	81 e0       	ldi	r24, 0x01	; 1
 62a:	90 e0       	ldi	r25, 0x00	; 0
 62c:	06 2e       	mov	r0, r22
 62e:	02 c0       	rjmp	.+4      	; 0x634 <DIO_SetPinValue+0xc0>
 630:	88 0f       	add	r24, r24
 632:	99 1f       	adc	r25, r25
 634:	0a 94       	dec	r0
 636:	e2 f7       	brpl	.-8      	; 0x630 <DIO_SetPinValue+0xbc>
 638:	80 95       	com	r24
 63a:	82 23       	and	r24, r18
 63c:	82 bb       	out	0x12, r24	; 18
				PORTD |=(value<<pinnumber);
 63e:	82 b3       	in	r24, 0x12	; 18
 640:	50 e0       	ldi	r21, 0x00	; 0
 642:	02 c0       	rjmp	.+4      	; 0x648 <DIO_SetPinValue+0xd4>
 644:	44 0f       	add	r20, r20
 646:	55 1f       	adc	r21, r21
 648:	6a 95       	dec	r22
 64a:	e2 f7       	brpl	.-8      	; 0x644 <DIO_SetPinValue+0xd0>
 64c:	48 2b       	or	r20, r24
 64e:	42 bb       	out	0x12, r20	; 18
				break;
			
		}
		Local_Errorstate =ES_OK;
 650:	81 e0       	ldi	r24, 0x01	; 1
				PORTC |=(value<<pinnumber);
				break;
			case PORT_D:
				PORTD &=~(1<<pinnumber);//Mask
				PORTD |=(value<<pinnumber);
				break;
 652:	08 95       	ret
		}
		Local_Errorstate =ES_OK;
	}
   else
   {
	 Local_Errorstate= ES_NOK;
 654:	80 e0       	ldi	r24, 0x00	; 0
 656:	08 95       	ret
 658:	80 e0       	ldi	r24, 0x00	; 0
 65a:	08 95       	ret
				PORTD &=~(1<<pinnumber);//Mask
				PORTD |=(value<<pinnumber);
				break;
			
		}
		Local_Errorstate =ES_OK;
 65c:	81 e0       	ldi	r24, 0x01	; 1
   else
   {
	 Local_Errorstate= ES_NOK;
   }
  return Local_Errorstate;
}
 65e:	08 95       	ret

00000660 <DIO_readpinvalue>:

ES_t DIO_readpinvalue(uint8_t portnumber,uint8_t pinnumber,uint8_t *value)
{
	ES_t LocalErrorstate;
	if(portnumber>='A' && portnumber<='D')
 660:	9f eb       	ldi	r25, 0xBF	; 191
 662:	98 0f       	add	r25, r24
 664:	94 30       	cpi	r25, 0x04	; 4
 666:	d8 f5       	brcc	.+118    	; 0x6de <DIO_readpinvalue+0x7e>
	{
		
	 switch(portnumber)
 668:	82 34       	cpi	r24, 0x42	; 66
 66a:	a9 f0       	breq	.+42     	; 0x696 <DIO_readpinvalue+0x36>
 66c:	18 f4       	brcc	.+6      	; 0x674 <DIO_readpinvalue+0x14>
 66e:	81 34       	cpi	r24, 0x41	; 65
 670:	31 f0       	breq	.+12     	; 0x67e <DIO_readpinvalue+0x1e>
 672:	37 c0       	rjmp	.+110    	; 0x6e2 <DIO_readpinvalue+0x82>
 674:	83 34       	cpi	r24, 0x43	; 67
 676:	d9 f0       	breq	.+54     	; 0x6ae <DIO_readpinvalue+0x4e>
 678:	84 34       	cpi	r24, 0x44	; 68
 67a:	29 f1       	breq	.+74     	; 0x6c6 <DIO_readpinvalue+0x66>
 67c:	32 c0       	rjmp	.+100    	; 0x6e2 <DIO_readpinvalue+0x82>
	 {
		case PORT_A:
		    *value= ((PINA>>pinnumber)&1);
 67e:	89 b3       	in	r24, 0x19	; 25
 680:	90 e0       	ldi	r25, 0x00	; 0
 682:	02 c0       	rjmp	.+4      	; 0x688 <DIO_readpinvalue+0x28>
 684:	95 95       	asr	r25
 686:	87 95       	ror	r24
 688:	6a 95       	dec	r22
 68a:	e2 f7       	brpl	.-8      	; 0x684 <DIO_readpinvalue+0x24>
 68c:	81 70       	andi	r24, 0x01	; 1
 68e:	fa 01       	movw	r30, r20
 690:	80 83       	st	Z, r24
		break;
		case PORT_D:
		  *value= ((PIND>>pinnumber)&1);
		break;
	}
	LocalErrorstate =ES_OK;
 692:	81 e0       	ldi	r24, 0x01	; 1
		
	 switch(portnumber)
	 {
		case PORT_A:
		    *value= ((PINA>>pinnumber)&1);
		break;
 694:	08 95       	ret
		case PORT_B:
		    *value= ((PINB>>pinnumber)&1);
 696:	86 b3       	in	r24, 0x16	; 22
 698:	90 e0       	ldi	r25, 0x00	; 0
 69a:	02 c0       	rjmp	.+4      	; 0x6a0 <DIO_readpinvalue+0x40>
 69c:	95 95       	asr	r25
 69e:	87 95       	ror	r24
 6a0:	6a 95       	dec	r22
 6a2:	e2 f7       	brpl	.-8      	; 0x69c <DIO_readpinvalue+0x3c>
 6a4:	81 70       	andi	r24, 0x01	; 1
 6a6:	fa 01       	movw	r30, r20
 6a8:	80 83       	st	Z, r24
		break;
		case PORT_D:
		  *value= ((PIND>>pinnumber)&1);
		break;
	}
	LocalErrorstate =ES_OK;
 6aa:	81 e0       	ldi	r24, 0x01	; 1
		case PORT_A:
		    *value= ((PINA>>pinnumber)&1);
		break;
		case PORT_B:
		    *value= ((PINB>>pinnumber)&1);
		break;
 6ac:	08 95       	ret
		case PORT_C:
		   *value= ((PINC>>pinnumber)&1);
 6ae:	83 b3       	in	r24, 0x13	; 19
 6b0:	90 e0       	ldi	r25, 0x00	; 0
 6b2:	02 c0       	rjmp	.+4      	; 0x6b8 <DIO_readpinvalue+0x58>
 6b4:	95 95       	asr	r25
 6b6:	87 95       	ror	r24
 6b8:	6a 95       	dec	r22
 6ba:	e2 f7       	brpl	.-8      	; 0x6b4 <DIO_readpinvalue+0x54>
 6bc:	81 70       	andi	r24, 0x01	; 1
 6be:	fa 01       	movw	r30, r20
 6c0:	80 83       	st	Z, r24
		break;
		case PORT_D:
		  *value= ((PIND>>pinnumber)&1);
		break;
	}
	LocalErrorstate =ES_OK;
 6c2:	81 e0       	ldi	r24, 0x01	; 1
		case PORT_B:
		    *value= ((PINB>>pinnumber)&1);
		break;
		case PORT_C:
		   *value= ((PINC>>pinnumber)&1);
		break;
 6c4:	08 95       	ret
		case PORT_D:
		  *value= ((PIND>>pinnumber)&1);
 6c6:	80 b3       	in	r24, 0x10	; 16
 6c8:	90 e0       	ldi	r25, 0x00	; 0
 6ca:	02 c0       	rjmp	.+4      	; 0x6d0 <DIO_readpinvalue+0x70>
 6cc:	95 95       	asr	r25
 6ce:	87 95       	ror	r24
 6d0:	6a 95       	dec	r22
 6d2:	e2 f7       	brpl	.-8      	; 0x6cc <DIO_readpinvalue+0x6c>
 6d4:	81 70       	andi	r24, 0x01	; 1
 6d6:	fa 01       	movw	r30, r20
 6d8:	80 83       	st	Z, r24
		break;
	}
	LocalErrorstate =ES_OK;
 6da:	81 e0       	ldi	r24, 0x01	; 1
		case PORT_C:
		   *value= ((PINC>>pinnumber)&1);
		break;
		case PORT_D:
		  *value= ((PIND>>pinnumber)&1);
		break;
 6dc:	08 95       	ret
	}
	LocalErrorstate =ES_OK;
  }
  else
  {
     LocalErrorstate=ES_NOK;
 6de:	80 e0       	ldi	r24, 0x00	; 0
 6e0:	08 95       	ret
		break;
		case PORT_D:
		  *value= ((PIND>>pinnumber)&1);
		break;
	}
	LocalErrorstate =ES_OK;
 6e2:	81 e0       	ldi	r24, 0x01	; 1
  {
     LocalErrorstate=ES_NOK;
  }
	
  return LocalErrorstate;
}
 6e4:	08 95       	ret

000006e6 <_exit>:
 6e6:	f8 94       	cli

000006e8 <__stop_program>:
 6e8:	ff cf       	rjmp	.-2      	; 0x6e8 <__stop_program>
